package UI_Storehouse;

import Shapes.ArrowButton;
import Shapes.PanelBackground;

import javax.swing.*;
import java.awt.*;

public class MainFrame {

        JFrame frame = new JFrame();

        JPanel MenuItemPanel = new JPanel();

        JPanel TypeFoodItemPanel = new JPanel();

        JPanel AppetizerPanel = new JPanel();
        JPanel MainMealPanel = new JPanel();
        JPanel DessertPanel = new JPanel();

        JScrollPane AppetizerScrollPanel = new JScrollPane(AppetizerPanel);
        JScrollPane MainMealScrollPanel = new JScrollPane(MainMealPanel);
        JScrollPane DessertScrollPanel = new JScrollPane(DessertPanel);

        JButton AppetizerButton = new JButton();
        JLabel AppetizerText = new JLabel();

        JButton MainCoursesButton = new JButton();
        JLabel MainCoursesText1 = new JLabel();
        JLabel MainCoursesText2 = new JLabel();

        JLabel TypeFoodHandel = new JLabel();
        JLabel MenuHandel = new JLabel();

        JButton DessertButton = new JButton();
        JLabel DessertText = new JLabel();

        ArrowButton NextButton = new ArrowButton(ArrowButton.RIGHT); // =>
        JButton GoBack = new JButton();

        JProgressBar bar = new JProgressBar(JProgressBar.HORIZONTAL, 0, 100);

        public MainFrame() {
            /*---------------------Frame---------------------*/
            frame.setTitle("G.S.S.A Storehouse");
            frame.setSize(1200, 800);
            frame.setResizable(false);
            frame.setLocationRelativeTo(null);
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            ImageIcon frameLogo = new ImageIcon("src\\Resources\\Storehouse Logo.png");
            Image frameImage = frameLogo.getImage();
            frame.setIconImage(frameImage);

            /*---------------------Titles Modifies---------------------*/
            MenuHandel.setHorizontalAlignment(SwingConstants.CENTER);
            MenuHandel.setText("Management");
            MenuHandel.setFont(new Font("", Font.BOLD, 45));
            MenuHandel.setForeground(new Color(0xdaa662));
            MenuHandel.setBounds(130, 8, 300, 50);
            //--------------//
            TypeFoodHandel.setHorizontalAlignment(SwingConstants.CENTER);
            TypeFoodHandel.setFont(new Font("", Font.BOLD + Font.ITALIC, 50));
            TypeFoodHandel.setForeground(new Color(0xdaa662));
            TypeFoodHandel.setBounds(150, 10, 300, 50);
            /*--------Progress Bar Modifies--------*/
            bar.setString("Please Wait a Little...Your Order is Preparing");
            bar.setFont(new Font("Serif", Font.BOLD, 20));
            bar.setIndeterminate(true);
            bar.setStringPainted(true);
            bar.setBounds(400, 325, 425, 100);
            bar.setVisible(false);
            /*--------Next DetailsButton Modifies------------*/
            NextButton.setBackground(Color.GREEN);
            NextButton.setOpaque(false);
            NextButton.setFocusable(false);
            NextButton.setBounds(500, 15, 70, 65);
            NextButton.addActionListener(_ -> new Thread(() -> {
                try {
                    frame.setEnabled(false);
                    bar.setVisible(true);
                    frame.repaint();
                    Thread.sleep(2500);
                    frame.dispose();
//                    SwingUtilities.invokeLater(() -> new OrderTypeFrame(Customer));
                } catch (InterruptedException _) {
                }
            }).start());
            // ------------//
            GoBack.setText("X");
            GoBack.setForeground(Color.WHITE);
            GoBack.setBackground(Color.RED);
            GoBack.setFocusable(false);
            GoBack.setBounds(25, 30, 45, 30);
            GoBack.addActionListener(_ -> {
                frame.dispose();
                SwingUtilities.invokeLater(LoginFrame::new);
            });
            /*---------------------Appetizer Modifies---------------------*/
            AppetizerText.setText("Products");
            AppetizerText.setForeground(Color.WHITE);
            AppetizerText.setFont(new Font("Arial", Font.BOLD + Font.ITALIC, 40));
            AppetizerText.setVerticalAlignment(JLabel.CENTER);
            AppetizerText.setBounds(20, 240, 200, 50);
            //------------//
            ImageIcon iconAppetizer = new ImageIcon("src\\Images\\Images For Buttons\\Appetizer.jpeg");
            Image imgAppetizer = iconAppetizer.getImage();
            Image scaledImgAppetizer = imgAppetizer.getScaledInstance(300, 120, Image.SCALE_SMOOTH);
            iconAppetizer = new ImageIcon(scaledImgAppetizer);
            AppetizerButton.setIcon(iconAppetizer);
            AppetizerButton.setBounds(250, 200, 300, 125);
            AppetizerButton.setBorder(BorderFactory.createLineBorder(new Color(0xdaa662), 2, true));
            AppetizerButton.addActionListener(_ -> {
                TypeFoodHandel.setText("- Products -");
                MenuItemPanel.remove(MainMealScrollPanel);
                MenuItemPanel.remove(DessertScrollPanel);
                MenuItemPanel.add(AppetizerScrollPanel);
                MenuItemPanel.setVisible(true);
                frame.repaint();
            });
            /*---------------------Main Meal Modifies---------------------*/
            MainCoursesText1.setText("Ord");
            MainCoursesText1.setForeground(Color.WHITE);
            MainCoursesText1.setFont(new Font("Arial", Font.BOLD + Font.ITALIC, 40));
            MainCoursesText1.setVerticalAlignment(JLabel.CENTER);
            MainCoursesText1.setBounds(20, 410, 200, 50);
            //------------//
            MainCoursesText2.setText("ers");
            MainCoursesText2.setForeground(Color.WHITE);
            MainCoursesText2.setFont(new Font("Arial", Font.BOLD + Font.ITALIC, 40));
            MainCoursesText2.setVerticalAlignment(JLabel.CENTER);
            MainCoursesText2.setBounds(435, 410, 200, 50);
            //------------//
            ImageIcon iconMainMeal = new ImageIcon("src\\Images\\Images For Buttons\\Main Meal.jpeg");
            Image imgMainMeal = iconMainMeal.getImage();
            Image scaledImgMainMeal = imgMainMeal.getScaledInstance(300, 120, Image.SCALE_SMOOTH + Image.SCALE_AREA_AVERAGING);
            iconMainMeal = new ImageIcon(scaledImgMainMeal);
            MainCoursesButton.setIcon(iconMainMeal);
            MainCoursesButton.setBounds(125, 375, 300, 125);
            MainCoursesButton.setBorder(BorderFactory.createLineBorder(new Color(0xdaa662), 2, true));
            MainCoursesButton.addActionListener(_ -> {
                TypeFoodHandel.setText("- Orders -");
                MenuItemPanel.remove(AppetizerScrollPanel);
                MenuItemPanel.remove(DessertScrollPanel);
                MenuItemPanel.add(MainMealScrollPanel);
                MenuItemPanel.setVisible(true);
                frame.repaint();
            });
            /*---------------------Dessert Modifies---------------------*/
            DessertText.setText("Shipments");
            DessertText.setForeground(Color.WHITE);
            DessertText.setFont(new Font("Arial", Font.BOLD + Font.ITALIC, 40));
            DessertText.setVerticalAlignment(JLabel.CENTER);
            DessertText.setBounds(345, 590, 200, 50);
            //------------//
            ImageIcon iconDessert = new ImageIcon("src\\Images\\Images For Buttons\\Dessert.jpeg");
            Image imgDessert = iconDessert.getImage();
            Image scaledImgDessert = imgDessert.getScaledInstance(300, 121, Image.SCALE_SMOOTH);
            iconDessert = new ImageIcon(scaledImgDessert);
            DessertButton.setIcon(iconDessert);
            DessertButton.setBounds(20, 550, 300, 125);
            DessertButton.setBorder(BorderFactory.createLineBorder(new Color(0xdaa662), 2, true));
            DessertButton.addActionListener(_ -> {
                TypeFoodHandel.setText("- Shipments -");
                MenuItemPanel.remove(AppetizerScrollPanel);
                MenuItemPanel.remove(MainMealScrollPanel);
                MenuItemPanel.add(DessertScrollPanel);
                MenuItemPanel.setVisible(true);
                frame.repaint();
            });
            /*---------------------Panel Modifies---------------------*/
            //--------------//
            TypeFoodItemPanel.setBackground(new Color(0, 0, 0, 150));
            TypeFoodItemPanel.setBounds(10, 15, 570, 740);
            TypeFoodItemPanel.setLayout(null);
            /*-------------Menu Panels--------------*/
            //--------------//
            MenuItemPanel.setBounds(590, 15, 585, 740);
            MenuItemPanel.setLayout(null);
            MenuItemPanel.setBackground(new Color(0, 0, 0, 140));
            MenuItemPanel.setOpaque(true);
            MenuItemPanel.setVisible(false);
            /*------------- Scrolled Panels--------------*/
            AppetizerPanel.setLayout(new GridLayout(0, 2, 10, 10));
            AppetizerPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
            AppetizerPanel.setBackground(new Color(0, 0, 0, 150));
            AppetizerPanel.setOpaque(true);
            //--------------//
            MainMealPanel.setLayout(new GridLayout(0, 2, 10, 10));
            MainMealPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
            MainMealPanel.setBackground(new Color(0, 0, 0, 150));
            MainMealPanel.setOpaque(true);
            //--------------//
            DessertPanel.setLayout(new GridLayout(0, 2, 10, 10));
            DessertPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
            DessertPanel.setBackground(new Color(0, 0, 0, 150));
            DessertPanel.setOpaque(true);
            //--------------//
            AppetizerScrollPanel.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
            AppetizerScrollPanel.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            AppetizerScrollPanel.setBounds(15, 150, 560, 570);
            AppetizerScrollPanel.setBackground(new Color(0, 0, 0, 0));
            AppetizerScrollPanel.getViewport().setOpaque(false);
            JScrollBar AppetizerVerticalBar = AppetizerScrollPanel.getVerticalScrollBar();
            AppetizerVerticalBar.addAdjustmentListener(e -> {  /*To Solve Shadow Problem When Scrolled*/
                if (!e.getValueIsAdjusting()) {
                    frame.revalidate();
                    frame.repaint();
                }
            });
            //--------------//
            MainMealScrollPanel.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
            MainMealScrollPanel.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            MainMealScrollPanel.setBounds(15, 150, 560, 570);
            MainMealScrollPanel.setBackground(new Color(0, 0, 0, 0));
            MainMealScrollPanel.getViewport().setOpaque(false);
            JScrollBar MainMealVerticalBar = MainMealScrollPanel.getVerticalScrollBar();
            MainMealVerticalBar.addAdjustmentListener(e -> {  /*To Solve Shadow Problem When Scrolled*/
                if (!e.getValueIsAdjusting()) {
                    frame.revalidate();
                    frame.repaint();
                }
            });
            //--------------//
            DessertScrollPanel.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
            DessertScrollPanel.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            DessertScrollPanel.setBounds(15, 150, 560, 570);
            DessertScrollPanel.setBackground(new Color(0, 0, 0, 0));
            DessertScrollPanel.getViewport().setOpaque(false);
            JScrollBar DessertVerticalBar = DessertScrollPanel.getVerticalScrollBar();
            DessertVerticalBar.addAdjustmentListener(e -> {  /*To Solve Shadow Problem When Scrolled*/
                if (!e.getValueIsAdjusting()) {
                    frame.revalidate();
                    frame.repaint();
                }
            });
            //--------------//
            /*-------------Background Panels--------------*/
            PanelBackground MainBackground = new PanelBackground("src\\Resources\\BackgroundLogin.jpg");
            MainBackground.setLayout(null);

            /*---------------------Adding Components---------------------*/
            TypeFoodItemPanel.add(MenuHandel);
            TypeFoodItemPanel.add(AppetizerText);
            TypeFoodItemPanel.add(MainCoursesText1);
            TypeFoodItemPanel.add(MainCoursesText2);
            TypeFoodItemPanel.add(DessertText);
            TypeFoodItemPanel.add(AppetizerButton);
            TypeFoodItemPanel.add(MainCoursesButton);
            TypeFoodItemPanel.add(DessertButton);
            //------------//
            MenuItemPanel.add(TypeFoodHandel);
            //------------//
            MainBackground.add(NextButton);
            MainBackground.add(GoBack);
            MainBackground.add(bar);
            MainBackground.add(MenuItemPanel);
            MainBackground.add(TypeFoodItemPanel);
            //------------//
            frame.add(MainBackground);
            frame.setVisible(true);
        }

}
