package UI_Storehouse;

import Shapes.PanelBackground;
import Shapes.RoundedPasswordField;
import Shapes.RoundedTextField;

import javax.swing.*;
import java.awt.*;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.util.TreeMap;

public class LoginFrame {
    JFrame frame = new JFrame();
    PanelBackground backgroundPanel = new PanelBackground("src/Resources/BackgroundLogin.jpg");
    JLabel title = new JLabel();
    JLabel usernameText = new JLabel();
    JLabel passwordText = new JLabel();
    RoundedTextField usernameField = new RoundedTextField("", 20);
    RoundedPasswordField passwordField = new RoundedPasswordField(20, 20);
    JRadioButton ShowPasswordButton = new JRadioButton();
    JButton SubmitButton = new JButton();
    JButton CreateNewAccount = new JButton();
    JPanel TransparentBackground = new JPanel();

    public LoginFrame() {
        try {
            UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
            SwingUtilities.updateComponentTreeUI(frame);
            frame.revalidate();
            frame.repaint();
        } catch (Exception _) {
        }
        JFrame.setDefaultLookAndFeelDecorated(true);

        /*-------frame Modifies-------*/
        frame.setTitle("StoreHouse");
        frame.setSize(600, 800);
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ImageIcon frameLogo = new ImageIcon("src\\Resources\\Storehouse Logo.png");
        Image frameImage = frameLogo.getImage();
        frame.setIconImage(frameImage);

        /*-------Labels Modifies-------*/
        title.setText("G.S.S.A");
        title.setFont(new Font("Arial", Font.BOLD, 40));
        title.setForeground(new Color(0x213555));
        title.setHorizontalAlignment(SwingConstants.CENTER);
        title.setVerticalAlignment(SwingConstants.BOTTOM);
        title.setBounds(40, 25, 500, 50);



        /*--------Username Modifies-------*/
        usernameText.setText("Username: ");
        usernameText.setFont(new Font("Arial", Font.BOLD, 22));
        usernameText.setForeground(new Color(0x213555));

        usernameField.setBackground(new Color(0xD8C4B6));
        usernameField.setFont(new Font("Arial", Font.BOLD, 16));
        usernameField.setBorder(null);
        usernameField.setMaximumSize(new Dimension(280, 40));
        usernameField.setPreferredSize(new Dimension(280, 40));
//        usernameField.addFocusListener(new java.awt.event.FocusListener() {
//            @Override
//            public void focusGained(java.awt.event.FocusEvent e) {
//                if (usernameField.getText().equals("Enter Your Username")) {
//                    usernameField.setText("");
//                    usernameField.setForeground(new Color(33, 53, 85));
//                }
//            }
//            @Override
//            public void focusLost(java.awt.event.FocusEvent e) {
//                if (usernameField.getText().isEmpty()) {
//                    usernameField.setText("Enter Your Username");
//                    usernameField.setForeground(new Color(100, 100, 100, 150));
//                }
//            }
//        });

        JPanel usernameItemsAll = new JPanel();
        usernameItemsAll.setBounds(30, 350, 500, 50);
        usernameItemsAll.setLayout(new FlowLayout(FlowLayout.LEFT, 10, 10));
        usernameItemsAll.add(usernameText);
        usernameItemsAll.add(usernameField);
        usernameItemsAll.setOpaque(false);

        /*--------Password Modifies-------*/
        passwordText.setText("Password: ");
        passwordText.setFont(new Font("Arial", Font.BOLD, 22));
        passwordText.setForeground(new Color(0x213555));

        passwordField.setBackground(new Color(0xD8C4B6));
        passwordField.setFont(new Font("Arial", Font.BOLD, 16));
        passwordField.setBorder(null);
        passwordField.setMaximumSize(new Dimension(200, 40));
        passwordField.setPreferredSize(new Dimension(200, 40));
//        passwordField.addFocusListener(new java.awt.event.FocusListener() {
//            @Override
//            public void focusGained(java.awt.event.FocusEvent e) {
//                if (passwordField.getText().equals("At Lest 4 Characters")) {
//                    passwordField.setEchoChar((char) 0);
//                    passwordField.setText("");
//                    passwordField.setForeground(new Color(33, 53, 85));
//                }
//            }
//
//            @Override
//            public void focusLost(java.awt.event.FocusEvent e) {
//                if (passwordField.getText().isEmpty()) {
//                    passwordField.setText("At Lest 4 Characters");
//                    passwordField.setForeground(new Color(100, 100, 100, 150));
//                }
//            }
//        });


        JPanel passwordItemsAll = new JPanel();
        passwordItemsAll.setBounds(30, 410, 500, 50);
        passwordItemsAll.setLayout(new FlowLayout(FlowLayout.LEFT, 10, 10));
        passwordItemsAll.add(passwordText);
        passwordItemsAll.add(passwordField);
        passwordItemsAll.add(ShowPasswordButton);
        passwordItemsAll.setOpaque(false);


        /*-------Show Button Modifies-------*/
        ImageIcon closedEyeIcon = new ImageIcon("src/Resources/ClosedEye.png");
        Image closedEyeScaled = closedEyeIcon.getImage().getScaledInstance(25, 25, Image.SCALE_SMOOTH);
        ImageIcon closedEye = new ImageIcon(closedEyeScaled);

        ImageIcon openEyeIcon = new ImageIcon("src/Resources/OpenEye.png");
        Image openEyeScaled = openEyeIcon.getImage().getScaledInstance(25, 25, Image.SCALE_SMOOTH);
        ImageIcon openEye = new ImageIcon(openEyeScaled);

        ShowPasswordButton.setFocusable(false);
        ShowPasswordButton.setIcon(closedEye);
        ShowPasswordButton.setBorderPainted(false);
        ShowPasswordButton.setContentAreaFilled(false);
        ShowPasswordButton.setFocusPainted(false);

        /*-------Show Button Event Modifies-------*/
        ShowPasswordButton.addActionListener(e -> {
            if (passwordField.getEchoChar() == '•') {
                passwordField.setEchoChar((char) 0);
                ShowPasswordButton.setIcon(openEye);
            } else {
                passwordField.setEchoChar('•');
                ShowPasswordButton.setIcon(closedEye);
            }
        });

        /*-------Submit DetailsButton Modifies-------*/
        SubmitButton.setText("Login");
        SubmitButton.setForeground(new Color(0xF5EFE7));
        SubmitButton.setBackground(new Color(0x3E5879));
        SubmitButton.setFont(new Font("Arial", Font.BOLD, 14));
        SubmitButton.setFocusable(false);
        SubmitButton.setBounds(250, 500, 100, 30);

        SubmitButton.addActionListener(_ -> {
            String username = usernameField.getText();
            String password = String.valueOf(passwordField.getPassword());
            if (GeneralClass.validateAccount(username, password, "src/Admins.txt")) {
                DialogMSG.LoginMessage();
                new Thread(() -> {
                    try {
                        frame.setEnabled(false);
//                        bar.setVisible(true);
                        frame.repaint();
                        Thread.sleep(5500);
                        frame.dispose();
//                        SwingUtilities.invokeLater(() -> new MenuFrame(new CustomerClass(username)));
                    } catch (InterruptedException _) {
                    }
                }).start();

            } else {
                DialogMSG.ErrorPassUser();
            }
        });

        /*-------Image Modifies-------*/


        /*-------Panels Modifies-------*/

        TransparentBackground.setBackground(new Color(0, 0, 0, 150));
        TransparentBackground.setLayout(null);
        TransparentBackground.setBounds(5,5,500,500);

        backgroundPanel.setBackground(new Color(0xC4AD8C));
        backgroundPanel.setLayout(null);


        /*-------Adding Components-------*/
        TransparentBackground.add(title);
        TransparentBackground.add(usernameItemsAll);
        TransparentBackground.add(passwordItemsAll);
        TransparentBackground.add(SubmitButton);
        //----------------//
//        backgroundPanel.add(TransparentBackground);
        //----------------//
        frame.add(backgroundPanel);
        frame.setVisible(true);
    }
}
